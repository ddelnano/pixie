---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hydra
  labels:
    name: hydra
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hydra
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: hydra
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 10100
        seccompProfile:
          type: RuntimeDefault
      initContainers:
      - name: migrate
        args:
        - migrate
        - -c
        - /etc/config/hydra/hydra.yml
        - sql
        - -e
        - --yes
        envFrom:
        - configMapRef:
            name: pl-db-config
        env:
        - name: PL_POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: pl-db-secrets
              key: PL_POSTGRES_USERNAME
        - name: PL_POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pl-db-secrets
              key: PL_POSTGRES_PASSWORD
        - name: OIDC_SUBJECT_IDENTIFIERS_PAIRWISE_SALT
          valueFrom:
            secretKeyRef:
              name: pl-hydra-secrets
              key: OIDC_SUBJECT_IDENTIFIERS_PAIRWISE_SALT
        - name: SECRETS_SYSTEM
          valueFrom:
            secretKeyRef:
              name: pl-hydra-secrets
              key: SECRETS_SYSTEM
        - name: HYDRA_DATABASE
          value: hydra
        - name: DSN
          # yamllint disable-line rule:line-length
          value: postgres://$(PL_POSTGRES_USERNAME):$(PL_POSTGRES_PASSWORD)@$(PL_POSTGRES_HOSTNAME):$(PL_POSTGRES_PORT)/$(PL_POSTGRES_DB)?sslmode=disable&max_conns=20&max_idle_conns=4
        imagePullPolicy: IfNotPresent
        image: docker.io/ddelnano/hydra:v2.3.0-go1.23@sha256:9382a850d54ff48f1f6b3bfa277a2ec430285bcaf500d09ee7ea7a7cca18e246
        volumeMounts:
        - mountPath: /etc/config/hydra
          name: config
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 10100
          seccompProfile:
            type: RuntimeDefault
      containers:
      - name: server
        imagePullPolicy: IfNotPresent
        image: docker.io/ddelnano/hydra:v2.3.0-go1.23@sha256:9382a850d54ff48f1f6b3bfa277a2ec430285bcaf500d09ee7ea7a7cca18e246
        args:
        - serve
        - -c
        - /etc/config/hydra/hydra.yml
        - all
        envFrom:
        - configMapRef:
            name: pl-db-config
        - configMapRef:
            name: pl-domain-config
        env:
        - name: PL_POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: pl-db-secrets
              key: PL_POSTGRES_USERNAME
        - name: PL_POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pl-db-secrets
              key: PL_POSTGRES_PASSWORD
        - name: OIDC_SUBJECT_IDENTIFIERS_PAIRWISE_SALT
          valueFrom:
            secretKeyRef:
              name: pl-hydra-secrets
              key: OIDC_SUBJECT_IDENTIFIERS_PAIRWISE_SALT
        - name: SECRETS_SYSTEM
          valueFrom:
            secretKeyRef:
              name: pl-hydra-secrets
              key: SECRETS_SYSTEM
        - name: DSN
          # yamllint disable-line rule:line-length
          value: postgres://$(PL_POSTGRES_USERNAME):$(PL_POSTGRES_PASSWORD)@$(PL_POSTGRES_HOSTNAME):$(PL_POSTGRES_PORT)/$(PL_POSTGRES_DB)?sslmode=disable&max_conns=20&max_idle_conns=4
        - name: PL_WORK_DOMAIN
          value: work.$(PL_DOMAIN_NAME)
        - name: PL_OAUTH_DOMAIN
          value: $(PL_WORK_DOMAIN)/oauth
        - name: HYDRA_URL
          value: https://$(PL_OAUTH_DOMAIN)/hydra
        - name: URLS_CONSENT
          value: https://$(PL_OAUTH_DOMAIN)/auth/hydra/consent
        - name: URLS_LOGIN
          value: https://$(PL_WORK_DOMAIN)/api/auth/oauth/login
        - name: URLS_LOGOUT
          value: https://$(PL_OAUTH_DOMAIN)/logout
        - name: URLS_SELF_PUBLIC
          value: $(HYDRA_URL)
        - name: URLS_SELF_ISSUER
          value: $(HYDRA_URL)
        ports:
        - containerPort: 4444
        - containerPort: 4445
        - containerPort: 5555
        volumeMounts:
        - name: config
          mountPath: /etc/config/hydra
        - name: certs
          mountPath: /certs
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 10100
          seccompProfile:
            type: RuntimeDefault
      - name: client-create-or-update
        imagePullPolicy: IfNotPresent
        image: docker.io/ddelnano/hydra:v2.3.0-alpine-go1.23@sha256:371daf5cc7477ae607d1011440da784c366b74c7cc8acea2322826b82c789fe1
        command: ['sh', '-c', 'set -x;
          echo "Waiting for hydra to be ready";
          URL="https://localhost:4445/health/ready";
          until [
            $(wget --no-check-certificate --spider --quiet --server-response ${URL} 2>&1 |
              awk ''NR==1{print $2}'') -eq 200
          ]; do
            echo "waiting for ${URL}";
            sleep 2;
          done;

          count=$(hydra list oauth2-clients -e https://localhost:4445 --skip-tls-verify --format json | jq ".items | length");
          success=$?;
          if [ $success -ne 0 ]; then
            echo "Error checking for existing client";
            exit 1;
          fi;

          if [ $count -gt 0 ]; then
            echo "Client already created";
            sleep infinity;
          fi;

          echo "Creating OAuth2 client";
          hydra create oauth2-client
             --endpoint https://localhost:4445
             --secret "${HYDRA_CLIENT_SECRET}"
             --format json
             --skip-tls-verify
             --grant-type authorization_code
             --grant-type refresh_token
             --grant-type implicit
             --response-type code
             --response-type id_token
             --response-type token
             --scope openid
             --scope offline
             --scope notifications
             --scope gist
             --scope vizier
             --redirect-uri "https://${PL_DOMAIN_NAME}/oauth/auth/callback"
             --redirect-uri "https://work.${PL_DOMAIN_NAME}/auth/callback"
             --name "pixie-auth-client";
          sleep infinity;
        ']
        envFrom:
        - configMapRef:
            name: pl-domain-config
        env:
        - name: HYDRA_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: pl-hydra-secrets
              key: CLIENT_SECRET
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 10100
          seccompProfile:
            type: RuntimeDefault
      restartPolicy: Always
      volumes:
      - name: config
        configMap:
          name: hydra-config
          items:
          - key: hydra.yml
            path: hydra.yml
      - name: certs
        secret:
          secretName: service-tls-certs
