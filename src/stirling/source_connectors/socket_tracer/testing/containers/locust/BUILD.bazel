# Copyright 2018- The Pixie Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_layer")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
load("@io_bazel_rules_docker//python3:image.bzl", "py3_image", "DEFAULT_BASE")
load("@locust_deps//:requirements.bzl", "requirement")

package(default_visibility = ["//src/stirling:__subpackages__"])

# genrule(
#     name = "certs",
#     outs = [
#         "ca.crt",
#         "client.crt",
#         "client.key",
#         "server.crt",
#         "server.key",
#     ],
#     cmd = """
#         $(location //src/common/testing/test_utils/cert_generator:cert_generator) \
#         --ca_crt $(location ca.crt) \
#         --client_crt $(location client.crt) \
#         --client_key $(location client.key) \
#         --server_crt $(location server.crt) \
#         --server_key $(location server.key) \
#         --secret_key_type pkcs8
#     """,
#     tools = [
#         "//src/common/testing/test_utils/cert_generator",
#     ],
# )

# pkg_tar(
#     name = "ssl_keys",
#     srcs = [
#         "ca.crt",
#         "client.crt",
#         "client.key",
#         "server.crt",
#         "server.key",
#     ],
#     mode = "0755",
#     package_dir = "/etc/ssl",
#     strip_prefix = "/src/stirling/source_connectors/socket_tracer/testing/containers/py_asyncio",
# )

# container_image(
#     name = "py_asyncio_base",
#     base = DEFAULT_BASE,
#     tars = [":ssl_keys"],
# )

# py3_image(
#     name = "locust_image",
#     base = ":py_asyncio_base",
#     srcs = ["*.py"],
#     deps = [
#         requirement("locust"),
#     ],
#     main = "locustfile.py",
# )
container_layer(
    name = "pip_deps_layer",
    directory = "/root/.local/lib/python3.9/site-packages/locust",
    files = [
        requirement("locust"),
        requirement("gevent"),
    ],
)

container_image(
    name = "load_test",
    base = DEFAULT_BASE,
    # entrypoint = "locust",
    files = glob(["*.py"]),
    layers = [
        ":pip_deps_layer",
    ],
)
